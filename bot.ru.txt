import os
from telegram import Update, ReplyKeyboardMarkup
from telegram.ext import Application, CommandHandler, MessageHandler, filters, ContextTypes, ConversationHandler

# Настройки
BOT_TOKEN = os.getenv("BOT_TOKEN")
ADMIN_ID = int(os.getenv("ADMIN_ID", 1170665353))
PASSWORD = os.getenv("BOT_PASSWORD", "lacroisette")  # пароль можно будет менять в Render

# Состояния для ConversationHandler
ASK_PASSWORD, ASK_ROLE = range(2)

# Команда /start
async def start(update: Update, context: ContextTypes.DEFAULT_TYPE):
    await update.message.reply_text("Welcome! Please enter the password:")
    return ASK_PASSWORD

# Проверка пароля
async def check_password(update: Update, context: ContextTypes.DEFAULT_TYPE):
    if update.message.text.strip() == PASSWORD:
        await update.message.reply_text(
            "Password correct! Please select your role:",
            reply_markup=ReplyKeyboardMarkup(
                [["Waiter", "Bartender"], ["Hostess", "Cashier"]],
                resize_keyboard=True
            )
        )
        return ASK_ROLE
    else:
        await update.message.reply_text("Wrong password! Try again:")
        return ASK_PASSWORD

# Обработка выбора роли
async def choose_role(update: Update, context: ContextTypes.DEFAULT_TYPE):
    role = update.message.text
    await update.message.reply_text(f"You selected: {role}. Now send me your report.")
    # Отправляем админу уведомление
    await context.bot.send_message(chat_id=ADMIN_ID, text=f"User selected role: {role}")
    return ConversationHandler.END

# Главная функция
def main():
    app = Application.builder().token(BOT_TOKEN).build()

    conv_handler = ConversationHandler(
        entry_points=[CommandHandler("start", start)],
        states={
            ASK_PASSWORD: [MessageHandler(filters.TEXT & ~filters.COMMAND, check_password)],
            ASK_ROLE: [MessageHandler(filters.TEXT & ~filters.COMMAND, choose_role)],
        },
        fallbacks=[],
    )

    app.add_handler(conv_handler)
    app.run_polling()

if __name__ == "__main__":
    main()
